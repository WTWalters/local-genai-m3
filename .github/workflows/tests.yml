name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        # Install minimal versions of optional dependencies for testing
        pip install numpy scipy

    - name: Lint with flake8
      run: |
        # Stop build if there are Python syntax errors or undefined names
        flake8 scripts tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. GitHub editor is 127 chars wide
        flake8 scripts tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting with black
      run: |
        black --check scripts tests

    - name: Check import sorting with isort
      run: |
        isort --check-only scripts tests

    - name: Type check with mypy
      run: |
        # Type check only core modules (skip tests for now)
        mypy scripts --ignore-missing-imports --follow-imports=skip || true

    - name: Test with pytest
      run: |
        # Run tests with coverage, excluding GPU and network tests in CI
        pytest tests/ -v \
          --cov=scripts \
          --cov-report=xml \
          --cov-report=term-missing \
          -m "not gpu and not network" \
          --timeout=300

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  test-macos:
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt

    - name: Test on macOS (basic tests only)
      run: |
        # Run subset of tests that work on macOS without GPU
        pytest tests/test_simple_rag.py tests/test_document_processing.py -v \
          -m "not gpu" \
          --timeout=300